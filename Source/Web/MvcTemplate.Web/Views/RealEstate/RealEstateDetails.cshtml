@model MvcTemplate.Web.ViewModels.RealEstate.RealEstateDetails
@{
    ViewBag.Title = "RealEstateInformation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{ var images = Model.RealEstateDetailsViewModel.Images.ToList();}
<div class="row">
    <div class="text-center"><h3><b>@Model.RealEstateDetailsViewModel.Title</b></h3></div>
    <hr />
    <div class="col-md-2"></div>
    <div class="col-md-8">
        @if (images.Count != 0)
        {
            <div id="myCarousel" class="carousel slide" data-ride="carousel">
                <!-- Indicators -->
                <ol class="carousel-indicators">
                    @for (int i = 0; i < images.Count; i++)
                {
                    if (i == 0)
                    {
                            <li data-target="#myCarousel" data-slide-to="@i" class="active"></li>
                        }
                        else
                        {
                            <li data-target="#myCarousel" data-slide-to="@i"></li>
                        }
                    }
                </ol>

                <!-- Wrapper for slides -->
                <div class="carousel-inner" role="listbox">
                    @for (int i = 0; i < images.Count; i++)
                {
                    if (i == 0)
                    {
                            <div class="item active">
                                <img src="@Url.Action("GetImage", "RealEstateImage", new { id = images[i].Id })" alt="@Model.RealEstateDetailsViewModel.Title" class="img img-responsive" />
                            </div>
                        }
                        else
                        {
                            <div class="item">
                                <img src="@Url.Action("GetImage", "RealEstateImage", new { id = images[i].Id })" alt="@Model.RealEstateDetailsViewModel.Title" class="img img-responsive" />
                            </div>
                        }
                    }
                </div>
                <!-- Left and right controls -->
                <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                    <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        }
        else
        {
            <div class="text-center"><h3>No photos to show</h3></div>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <br />
        <div class="row">
            <h4 class="inline">For @Model.RealEstateDetailsViewModel.LettingType</h4>
            <h4 class="inline pull-right">@Model.RealEstateDetailsViewModel.FurnishedState</h4>
        </div>
        <span><h4 class="inline"><b>Price: € @Model.RealEstateDetailsViewModel.Price</b></h4></span>
        <span class="pull-right">
            <h4 class="inline">
                <a href="/User/UserDetails/@Model.RealEstateDetailsViewModel.UserId">@Model.RealEstateDetailsViewModel.User.UserName</a>
            </h4>
        </span>
    </div>
</div>
<hr>
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <p class="text-justify">
            @Model.RealEstateDetailsViewModel.Content
        </p>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <span>
            <span id="likes-content">
                <h5 class="inline"><b>@Model.RealEstateDetailsViewModel.Likes.Count likes</b></h5>
            </span>
            @if (this.User.Identity.IsAuthenticated)
            {
                <span id="like-realestate" class="btn btn-default glyphicon glyphicon-thumbs-up">
                </span>
                <span id="dislike-realestate" class="btn btn-default glyphicon glyphicon-thumbs-down">
                </span>
            }
        </span>
        <span class="pull-right">
            @if (this.User.Identity.IsAuthenticated)
            {
                <span id="add-comment-btn" class="btn btn-default">
                    Add Comment
                </span>
            }
            <h5 class="inline"><b>@Model.RealEstateDetailsViewModel.CommentsCount comments</b></h5>
        </span>
    </div>
</div>
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        @using (Html.BeginForm("AddComment", "Comment", FormMethod.Post, new { @class = "form-horizontal", id = "add-comment-form" }))
        {
            <br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.RealEstateDetailsViewModel.Id, new { id = "realestate-id" });
            <div class="form-group col-md-4">
                <span class="inline"><b>@User.Identity.Name: </b></span>
                <span class="inline">
                    @Html.TextAreaFor(m => m.CommentAddViewModel.Content, new { @class = "form-control", id = "comment-content" })
                    @Html.ValidationMessageFor(m => m.CommentAddViewModel.Content, "", new { @class = "text-danger" })
                </span>
            </div>
            <div class="col-md-3">
                <input id="post-comment-btn" type="submit" class="btn btn-default" value="Post Comment" />
            </div>
        }
    </div>
</div>
@if (Model.RealEstateDetailsViewModel.Comments.Count != 0)
{
    <hr />
    <div class="row">
        <div class="col-md-1"></div>
        <div id="comments-container" class="col-md-10">
            @foreach (var comment in Model.RealEstateDetailsViewModel.Comments)
            {
                <div class="row">
                    <div class="col-md-2">
                        <span><a href="#/@comment.User.Id"><b>@comment.User.Email: </b></a></span>
                        <span><b>@comment.CreatedOn</b></span>
                    </div>
                    <div class="col-md-9">
                        <span>
                            <p class="text-justify">
                                @comment.Content
                            </p>
                        </span>
                    </div>
                </div>
                <hr />
            }
        </div>
    </div>
    <div class="row text-center">
        <nav>
            <ul class="pagination">
                @for (int i = 1; i <= ViewBag.totalPages; i++)
                {
                    <li>
                        @Ajax.ActionLink(i.ToString(), "GetRealEstateComments", "Comment", new { id = i }, new AjaxOptions
                   {
                       HttpMethod = "POST",
                       InsertionMode = InsertionMode.Replace,
                       UpdateTargetId = "comments-container",
                   })
                    </li>
                }
            </ul>
        </nav>
    </div>
}
<script>
    $('#like-realestate').click(function () {
        $.post("/Like/LikeRealEstate", { id : @Model.RealEstateDetailsViewModel.Id }, function (data) {
            $("#likes-content").html(data);
        });
    })

    $('#dislike-realestate').click(function () {
        $.post("/Like/DislikeRealEstate", { id : @Model.RealEstateDetailsViewModel.Id }, function (data) {
            $("#likes-content").html(data);
        });
    })
</script>

@section scripts{
    @Scripts.Render("~/bundles/realestateComment")
    @Scripts.Render("~/bundles/jqueryval")
}